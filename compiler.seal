include './token.seal'
include './ast.seal'

extern define compile(root)
  var out = ''
  if root.type == AST_INT
    out += format('push %\n', root.val)
  else if root.type == AST_COMP
    for st in root.val
      out += compile(st)
  else if root.type == AST_FUNC_CALL
    out += compile(root.val.arg)
    out += 'writeln\n'
  else if root.type == AST_BINARY
    out += compile(root.val.left)
    out += compile(root.val.right)
    if root.val.op == TOKEN_PLUS then out += 'add\n'
    else if root.val.op == TOKEN_MINUS then out += 'sub\n'
    else if root.val.op == TOKEN_MUL   then out += 'mul\n'
    else if root.val.op == TOKEN_DIV   then out += 'div\n'
    else if root.val.op == TOKEN_MOD   then out += 'mod\n'
  else
    writeln('unrecognized ast node')
    exit(1)

  return out
